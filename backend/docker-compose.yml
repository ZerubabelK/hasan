version: "3.6"
services:
  node-app:
    container_name: server
    # network_mode: host
    build:
      dockerfile: dockerfile
      context: .
    restart: always
    env_file:
      - .env
  postgres:
    image: postgres:15
    # constainer_name: database
    # network_mode: host
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.35.0
    container_name: graphql-engine
    # network_mode: host
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    # environment:
    #   ## postgres database to store Hasura metadata
    #   HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
    #   ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
    #   PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
    #   ## enable the console served by server
    #   HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
    #   ## enable debugging mode. It is recommended to disable this in production
    #   HASURA_GRAPHQL_DEV_MODE: "true"
    #   # HASURA_GRAPHQL_ADMIN_SECRET : "samiwefwvbuwevvwdyv"
    #   # HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
    #   HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    #   ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
    #   # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
    #   ## uncomment next line to set an admin secret
   
volumes:
  db_data:
